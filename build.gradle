plugins {
    id 'idea'
    id 'net.minecraftforge.gradle'
    id 'org.spongepowered.mixin'
    id 'org.parchmentmc.librarian.forgegradle'
    id 'maven-publish'
}

version = mod_version
group = 'plus.dragons.createcentralkitchen'
archivesBaseName = "create_central_kitchen-${artifact_minecraft_version}-for-create-${create_version}"

jarJar.enable()
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')

            arg '-mixin.config=create_central_kitchen.mixins.json'

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'create_central_kitchen'

            mods {
                create_central_kitchen {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg '-mixin.config=create_central_kitchen.mixins.json'

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'create_central_kitchen'

            mods {
                create_central_kitchen {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'create_central_kitchen',
                 '--all', '--output', file('src/generated/resources/'),
                 '--existing', file('src/main/resources/'),
                 '--existing-mod', 'create',
                 '--existing-mod', 'farmersdelight'

            mods {
                create_central_kitchen {
                    source sourceSets.main
                }
            }
        }
    }
}


repositories {
    maven {
        name "Tterrag maven"
        url "https://maven.tterrag.com/"
    }
    maven {
        name 'Progwml6 maven'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name "Blamejared Maven"
        url "https://maven.blamejared.com"
    }
    maven {
        name "Theillusivec4 Maven"
        url "https://maven.theillusivec4.top/"
    }
    maven {
        name "Abnormals Maven"
        url  "https://maven.jaackson.me"
    }
    maven {
        name "Apple Skin"
        url "https://maven.ryanliptak.com/"
    }
    maven {
        name "JitPack"
        url 'https://jitpack.io'
    }
    maven {
        name "Curse Maven"
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //embedded dependencies
    compileOnly(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${mixin_extras_version}"))
    implementation(jarJar("com.github.llamalad7.mixinextras:mixinextras-forge:${mixin_extras_version}")) {
        transitive = false
        jarJar.ranged(it, "[${mixin_extras_version},)")
    }
    //mandatory dependencies
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}-${create_version_build}:slim") {transitive = false}
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    compileOnly fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    //integration dependencies
    ////create addons
    implementation fg.deobf("curse.maven:createaddition-439890:${create_addition_file}")
    ////farmers delight addons
    implementation fg.deobf("curse.maven:farmers-delight-398521:${farmers_delight_file}")
    implementation fg.deobf("curse.maven:brewin-and-chewin-637808:${brewin_and_chewin_file}")
    implementation fg.deobf("curse.maven:farmers-respite-551453:${farmers_respite_file}")
    implementation fg.deobf("curse.maven:miners-delight-plus-689630:${miners_delight_file}")
    implementation fg.deobf("curse.maven:nethers-delight-496394:${nethers_delight_file}")
    ////abnormals mods addons
    implementation fg.deobf("com.teamabnormals:blueprint:${blueprint_version}")
    implementation fg.deobf("curse.maven:abnormals-delight-442719:${abnormals_delight_file}")
    implementation fg.deobf("curse.maven:atmospheric-362393:${atmospheric_file}")
    implementation fg.deobf("curse.maven:autumnity-365045:${autumnity_file}")
    implementation fg.deobf("curse.maven:buzzier-bees-355458:${buzzier_bees_file}")
    implementation fg.deobf("curse.maven:environmental-388992:${environmental_file}")
    implementation fg.deobf("curse.maven:neapolitan-382016:${neapolitan_file}")
    implementation fg.deobf("curse.maven:upgrade-aquatic-326895:${upgrade_aquatic_file}")
    implementation fg.deobf("curse.maven:peculiars-418551:${peculiars_file}")
    implementation fg.deobf("curse.maven:respiteful-836471:${respiteful_file}")
    implementation fg.deobf("curse.maven:seasonals-416471:${seasonals_file}")
    implementation fg.deobf("curse.maven:differentiate-450748:${differentiate_file}")
    implementation fg.deobf("curse.maven:cookielicious-409577:${cookielicious_file}")
    //utility dependencies
    compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}:${jei_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}")
    compileOnly fg.deobf("squeek.appleskin:appleskin-forge:mc${appleskin_minecraft_version}-${appleskin_version}:api")
    runtimeOnly fg.deobf("squeek.appleskin:appleskin-forge:mc${appleskin_minecraft_version}-${appleskin_version}")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, 'create_central_kitchen.refmap.json'
    config 'create_central_kitchen.mixins.json'

    debug.verbose = true
    debug.export = true
}

void processJar(Jar jarTask) {
    jarTask.configure {
        from "LICENSE"
        exclude ".cache"
        exclude "assets/create_central_kitchen/lang/unfinished"
        exclude "assets/create_central_kitchen/lang/partial"

        manifest {
            attributes([
                "Specification-Title"     : "create_central_kitchen",
                "Specification-Vendor"    : "dragonsplus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "dragonsplus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': 'create_central_kitchen.mixins.json'
            ])
        }
    }
}

jar {
    classifier 'slim'
    finalizedBy 'reobfJar'
}

tasks.jarJar {
    classifier ""
    finalizedBy reobf.maybeCreate('jarJar')
}

processJar(jar)
processJar(tasks.jarJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
